"use client";

import { motion } from "framer-motion";
import { Scale, Users, ScrollText, Lightbulb, ArrowRight } from "lucide-react";
import { useRouter } from "next/navigation";

export default function AboutProjectPage() {
  const router = useRouter();

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: { opacity: 1, transition: { staggerChildren: 0.1 } },
  };

  return (
    <main className="min-h-screen bg-[var(--background)] text-[var(--foreground)] overflow-hidden">
      {/* === HERO SECTION === */}
      <section className="relative py-32 text-center px-6 overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-[var(--color-red-rev)]/20 via-transparent to-[var(--color-brown-earth)]/10 blur-3xl" />

        <div className="relative max-w-6xl mx-auto">
          <motion.h1
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.1 }}
            className="text-5xl md:text-7xl font-black mb-6 leading-tight"
          >
            <span className="text-[var(--color-gray-text)]">
              Ch·ªß ƒë·ªÅ chuy√™n ƒë·ªÅ h·ªçc thu·∫≠t:
            </span>
            <br />
            <span className=" bg-gradient-to-r from-[var(--color-red-rev)] via-red-500 to-orange-500 bg-clip-text text-transparent">
              ‚ÄúD√¢n ch·ªß ·ªü Vi·ªát Nam c√≥ ph·∫£i l√† t·ª± do tuy·ªát ƒë·ªëi?‚Äù
            </span>
          </motion.h1>

          <motion.p
            initial={{ opacity: 0, y: 40 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="text-lg md:text-xl max-w-3xl mx-auto leading-relaxed text-[var(--color-gray-text)] mb-8"
          >
            M·ªôt d·ª± √°n h·ªçc t·∫≠p k·∫øt h·ª£p l√Ω lu·∫≠n ch√≠nh tr·ªã v√† c√¥ng ngh·ªá tr√¨nh b√†y
            tr·ª±c quan ‚Äî gi√∫p sinh vi√™n hi·ªÉu r√µ m·ªëi quan h·ªá gi·ªØa quy·ªÅn t·ª± do c√°
            nh√¢n v√† l·ª£i √≠ch c·ªông ƒë·ªìng trong n·ªÅn d√¢n ch·ªß x√£ h·ªôi ch·ªß nghƒ©a Vi·ªát
            Nam.
          </motion.p>

          <motion.button
            onClick={() => router.push("/")}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.3 }}
            whileHover={{
              scale: 1.05,
              boxShadow: "0 20px 40px rgba(200, 16, 46, 0.3)",
            }}
            className="inline-flex items-center gap-2 bg-gradient-to-r from-[var(--color-red-rev)] to-red-600 text-white px-8 py-4 rounded-full font-semibold shadow-lg hover:shadow-xl transition-all"
          >
            Kh√°m Ph√° <ArrowRight className="w-5 h-5" />
          </motion.button>
        </div>
      </section>

      {/* === GI·ªöI THI·ªÜU CHUNG === */}
      <section className="py-24 px-6 max-w-6xl mx-auto">
        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true }}
          className="grid md:grid-cols-2 gap-8"
        >
          {[
            {
              icon: "üéØ",
              title: "M·ª•c ƒê√≠ch",
              desc: "Ph√¢n t√≠ch l√Ω lu·∫≠n v·ªÅ d√¢n ch·ªß x√£ h·ªôi ch·ªß nghƒ©a v√† v·∫≠n d·ª•ng v√†o th·ª±c ti·ªÖn ƒë·ªùi s·ªëng, gi√∫p sinh vi√™n hi·ªÉu r√µ gi·ªõi h·∫°n c·ªßa 't·ª± do tuy·ªát ƒë·ªëi'.",
              color: "from-red-500 to-orange-500",
            },
            {
              icon: "üíª",
              title: "H√¨nh Th·ª©c Th·ªÉ Hi·ªán",
              desc: "·ª®ng d·ª•ng c√¥ng ngh·ªá web hi·ªán ƒë·∫°i (Next.js, React, Framer Motion) ƒë·ªÉ tr√¨nh b√†y b√†i h·ªçc sinh ƒë·ªông, tr·ª±c quan v√† t∆∞∆°ng t√°c.",
              color: "from-blue-500 to-cyan-500",
            },
          ].map((item, i) => (
            <motion.div
              key={i}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: i * 0.2 }}
              whileHover={{ y: -8 }}
              className="group relative bg-white rounded-2xl p-8 shadow-lg hover:shadow-2xl transition-all border border-gray-200/50 overflow-hidden"
            >
              <div
                className={`absolute inset-0 bg-gradient-to-br ${item.color} opacity-0 group-hover:opacity-5 transition-opacity`}
              />
              <div className="relative z-10">
                <div className="text-4xl mb-3">{item.icon}</div>
                <h3 className="text-2xl font-bold text-[var(--color-red-rev)] mb-2">
                  {item.title}
                </h3>
                <p className="text-[var(--color-gray-text)] leading-relaxed">
                  {item.desc}
                </p>
              </div>
            </motion.div>
          ))}
        </motion.div>
      </section>

      {/* === M·ª§C TI√äU H·ªåC T·∫¨P === */}
      <section className="py-24 px-6 bg-gradient-to-b from-[var(--color-beige-light)] to-white">
        <div className="max-w-6xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-black mb-4 text-[var(--color-red-rev)]">
              M·ª•c Ti√™u H·ªçc T·∫≠p
            </h2>
            <div className="w-24 h-1 bg-gradient-to-r from-[var(--color-red-rev)] to-orange-500 mx-auto rounded-full" />
          </motion.div>

          <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true, amount: 0.3 }}
            className="grid md:grid-cols-3 gap-8"
          >
            {[
              {
                icon: Lightbulb,
                title: "Hi·ªÉu B·∫£n Ch·∫•t D√¢n Ch·ªß",
                desc: "N·∫Øm v·ªØng kh√°i ni·ªám d√¢n ch·ªß x√£ h·ªôi ch·ªß nghƒ©a v√† m·ªëi li√™n h·ªá gi·ªØa t·ª± do c√° nh√¢n ‚Äì l·ª£i √≠ch c·ªông ƒë·ªìng.",
              },
              {
                icon: Scale,
                title: "Bi·∫øt C√¢n B·∫±ng Quy·ªÅn L·ª£i",
                desc: "Nh·∫≠n th·ª©c ƒë∆∞·ª£c ranh gi·ªõi gi·ªØa d√¢n ch·ªß ch√¢n ch√≠nh v√† vi·ªác l·ª£i d·ª•ng d√¢n ch·ªß trong ƒë·ªùi s·ªëng th·ª±c t·∫ø.",
              },
              {
                icon: ScrollText,
                title: "V·∫≠n D·ª•ng V√†o Th·ª±c Ti·ªÖn",
                desc: "Ph√¢n t√≠ch t√¨nh hu·ªëng x√£ h·ªôi, m·∫°ng x√£ h·ªôi; nh·∫≠n di·ªán h√†nh vi ƒë√∫ng ‚Äì sai theo tinh th·∫ßn ph√°p lu·∫≠t.",
              },
            ].map((goal, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 40 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: i * 0.15 }}
                whileHover={{ y: -12 }}
                className="relative bg-white rounded-2xl p-8 border-2 border-transparent hover:border-[var(--color-red-rev)] shadow-lg hover:shadow-2xl transition-all group"
              >
                <div className="absolute top-0 left-0 w-1 h-0 group-hover:h-full bg-[var(--color-red-rev)] transition-all duration-300" />
                <goal.icon className="w-14 h-14 text-[var(--color-red-rev)] mb-4" />
                <h3 className="text-xl font-bold text-[var(--color-red-rev)] mb-3">
                  {goal.title}
                </h3>
                <p className="text-[var(--color-gray-text)] leading-relaxed">
                  {goal.desc}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* === TUY√äN B·ªê H·ªåC THU·∫¨T === */}
      <section className="py-24 px-6 bg-gradient-to-b from-yellow-50 to-[var(--color-beige-light)]">
        <div className="max-w-6xl mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-4xl md:text-5xl font-black text-center mb-4 text-yellow-700"
          >
            üìú Tuy√™n B·ªë H·ªçc Thu·∫≠t
          </motion.h2>
          <div className="w-24 h-1 bg-yellow-500 mx-auto rounded-full mb-16" />

          <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
            className="space-y-6"
          >
            {[
              {
                icon: "üìö",
                title: "Ngu·ªìn T√†i Li·ªáu",
                content:
                  "N·ªôi dung ƒë∆∞·ª£c bi√™n so·∫°n d·ª±a tr√™n gi√°o tr√¨nh 'Ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc' v√† c√°c b√†i vi·∫øt ch√≠nh th·ªëng t·ª´ B·ªô C√¥ng an, M·∫∑t tr·∫≠n T·ªï qu·ªëc Vi·ªát Nam.",
              },
              {
                icon: "ü§ñ",
                title: "C√¥ng Ngh·ªá H·ªó Tr·ª£",
                content:
                  "C√°c c√¥ng c·ª• AI (ChatGPT, Claude) ƒë∆∞·ª£c d√πng ƒë·ªÉ t·ªëi ∆∞u n·ªôi dung, bi√™n so·∫°n c√¢u h·ªèi d·ª±a tr√™n gi√°o tr√¨nh v√† tr√¨nh b√†y giao di·ªán ‚Äî kh√¥ng thay th·∫ø vi·ªác t∆∞ duy, ph√¢n t√≠ch c·ªßa sinh vi√™n.",
              },
              {
                icon: "üéØ",
                title: "M·ª•c ƒê√≠ch D·ª± √Ån",
                content:
                  "·ª®ng d·ª•ng c√¥ng ngh·ªá hi·ªán ƒë·∫°i ƒë·ªÉ lan t·ªèa ki·∫øn th·ª©c ch√≠nh tr·ªã ‚Äì x√£ h·ªôi, gi√∫p sinh vi√™n h·ªçc t·∫≠p ch·ªß ƒë·ªông, tr·ª±c quan, c√≥ t∆∞ duy ph·∫£n bi·ªán.",
              },
            ].map((item, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, x: -20 }}
                whileInView={{ opacity: 1, x: 0 }}
                viewport={{ once: true }}
                transition={{ delay: i * 0.1 }}
                className="bg-white border-l-4 border-yellow-500 rounded-lg p-6 shadow-md hover:shadow-lg transition-all"
              >
                <div className="flex items-start gap-4">
                  <span className="text-3xl">{item.icon}</span>
                  <div>
                    <h3 className="font-bold text-lg text-yellow-700 mb-2">
                      {item.title}
                    </h3>
                    <p className="text-[var(--color-gray-text)]">
                      {item.content}
                    </p>
                  </div>
                </div>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* === TH√ÄNH VI√äN TH·ª∞C HI·ªÜN === */}
      <section className="py-24 px-6 bg-white">
        <div className="max-w-7xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl font-black mb-4 text-[var(--color-red-rev)]">
              üë• Nh√≥m Th·ª±c Hi·ªán D·ª± √Ån
            </h2>
            <div className="w-24 h-1 bg-gradient-to-r from-[var(--color-red-rev)] to-orange-500 mx-auto rounded-full" />
          </motion.div>

          <motion.div
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
            className="grid sm:grid-cols-2 md:grid-cols-5 gap-6"
          >
            {[
              {
                name: "Nguy·ªÖn Kh√°nh Nh∆∞",
                color: "from-red-400 to-red-600",
                role: "SE183971",
              },
              {
                name: "Nguy·ªÖn Ho√†ng ƒêi·ªÅn",
                color: "from-blue-400 to-blue-600",
                role: "SE183112",
              },
              {
                name: "Nguy·ªÖn Th·ªã Nh·∫≠t Linh",
                color: "from-green-400 to-green-600",
                role: "SE184002",
              },
              {
                name: "Ph·∫°m Th·ªã Th·∫£o Nguy√™n",
                color: "from-purple-400 to-purple-600",
                role: "SS170580",
              },
              {
                name: "Hu·ª≥nh L√™ Nh·∫≠t Ho√†ng",
                color: "from-yellow-400 to-yellow-600",
                role: "SE172474",
              },
            ].map((member, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: i * 0.1 }}
                whileHover={{ y: -8 }}
                className="text-center group"
              >
                <motion.div
                  whileHover={{ scale: 1.1 }}
                  className={`w-24 h-24 rounded-full bg-gradient-to-br ${member.color} flex items-center justify-center mb-4 mx-auto shadow-lg group-hover:shadow-xl transition-all`}
                >
                  <Users className="w-12 h-12 text-white" />
                </motion.div>
                <h4 className="font-bold text-lg text-[var(--color-red-rev)] mb-1">
                  {member.name}
                </h4>
                <p className="text-sm text-[var(--color-gray-text)] font-medium">
                  {member.role}
                </p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>
    </main>
  );
}
